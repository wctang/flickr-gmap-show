<?xml version="1.0" encoding="UTF-8"?>
<Module>
<ModulePrefs title="__MSG_title__" description="__MSG_description__" 
author="wctang" author_photo="http://farm1.static.flickr.com/219/buddyicons/81718017@N00.jpg" author_email="wctang+fgsfeedback@gmail.com"
author_link="http://blog.wctang.info/" author_location="Kaohsiung, Taiwan" author_affiliation="wctang.info"
title_url="http://code.google.com/p/flickr-gmap-show/" screenshot="http://flickr-gmap-show.googlecode.com/svn/trunk/pics/fgs_mapplet_preview.png"
thumbnail="http://flickr-gmap-show.googlecode.com/svn/trunk/pics/fgs_mapplet_thumb.png">
  <Locale messages="http://flickr-gmap-show.googlecode.com/svn/trunk/msg-en.xml"/>
  <Locale lang="zh-TW" messages="http://flickr-gmap-show.googlecode.com/svn/trunk/msg-zh-tw.xml"/>
  <Require feature="sharedmap"/>
  <Require feature="analytics"/>
</ModulePrefs>

<Content type="html"><![CDATA[
<style type="text/css">
#settingDiv, #pageDiv, #photoDiv {
    margin-bottom:10px;
}
#fgs_search_form {
    display:inline;
}

img {
    border:0px;
}

.mask {
    background:black;
    opacity:.8;
    -moz-opacity:.8;
    filter:alpha(opacity=80);
}
.mask div {
    background:white;
}

a.btn {
    cursor:pointer;
}
a.right {
    float:right;
}
a.btn img {
    cursor:pointer;
}

.photoPanel {
    height:140px;
    width:255px;
    border:solid 1px gray;
    padding:10px;
    margin:10px;
}
.photoPanel div {
    position:relative; 
    left:0px; 
    width:255px; 
    background:white;
}
.photoPanel .photos img {
    margin:5px;
    cursor:pointer;
}

.popup {
    font-size: 12px; 
    background:white;
}

</style>

<div id='settingDiv'></div>
<div id='pageDiv'></div>
<div id='photoDiv'></div>

<script src="http://yui.yahooapis.com/2.2.2/build/yahoo-dom-event/yahoo-dom-event.js"></script>
<script src="http://yui.yahooapis.com/2.2.2/build/animation/animation-min.js"></script>
<script type="text/javascript">
var _uacct = "UA-359113-4";

var msg_date = '__MSG_date__';
var msg_sort = '__MSG_sort__';
var msg_datetakendesc = '__MSG_datetakendesc__';
var msg_datetakenasc = '__MSG_datetakenasc__';
var msg_dateposteddesc = '__MSG_dateposteddesc__';
var msg_datepostedasc = '__MSG_datepostedasc__';
var msg_interestingnessdesc = '__MSG_interestingnessdesc__';
var msg_interestingnessasc = '__MSG_interestingnessasc__';
var msg_relevance = '__MSG_relevance__';
var msg_search = '__MSG_search__';
var msg_currpage = '__MSG_currpage__';
var msg_viewonflickr = '__MSG_viewonflickr__';
var msg_takenon = '__MSG_takenon__';
var msg_postby = '__MSG_postby__';



//---------------------------------
//-- flickr gmap show common api --
//---------------------------------

var imgdir = 'http://flickr-gmap-show.googlecode.com/svn/trunk/pics/';
var imgs = {
    loading : imgdir+'loading.gif',

//    close_default  : imgdir+'simple_close_default.gif',
//    close_hover    : imgdir+'simple_close_hover.gif',
//    close_selected : imgdir+'simple_close_selected.gif',
//    popup_default : imgdir+'simple_new_window_default.gif',
//    popup_hover   : imgdir+'simple_new_window_hover.gif',
//    popup_selected: imgdir+'simple_new_window_selected.gif',

    updown_default : imgdir+'simple_updown_default.gif',
    updown_hover   : imgdir+'simple_updown_hover.gif',
    updown_selected: imgdir+'simple_updown_selected.gif',
    prev_default  : imgdir+'simple_prev_default.gif',
    prev_hover    : imgdir+'simple_prev_hover.gif',
    prev_selected : imgdir+'simple_prev_selected.gif',
    next_default  : imgdir+'simple_next_default.gif',
    next_hover    : imgdir+'simple_next_hover.gif',
    next_selected : imgdir+'simple_next_selected.gif'
};

for(var m in imgs) {
    var mm = new Image();
    mm.src = imgs[m];
    imgs[m] = mm;
}

var deltas = [0,0,0,0,0,
0.7558876745860973,
0.4381797339583715,
0.2166893459120705,
0.1054534198706207,
0.0517575120441158,
0.0256017451528869,
0.012732042885645,
0.00634837196261628,
0.003169749786363714,
0.001583755663266591,
0.0007915970919446143,
0.0003957279865313504,
0.0001978462849822430,
0.0000989186817588934,
0.0000494593408794467];
var MAX_ZOOM = 19;
var MIN_ZOOM = 5;


// utility
function $(e) { return document.getElementById(e); };
function $c(e) { return document.createElement(e); };
function $a(e,a) { return e.getAttribute(a); };
function $dom(s) { var d=$c('div');d.innerHTML=s;return d.firstChild; };
function $extend(subc,basec) { 
    function inheritance(){}; inheritance.prototype=basec.prototype; subc.prototype=new inheritance(); 
    subc.prototype.constructor = subc; subc.prototype.baseConstructor = basec; subc.superClass = basec.prototype;
};
function $cbtn(n, title, clickfun) {
    var a = $dom('<a class="btn"><img src="'+imgs[n+'_default'].src+'"/></a>');
    a.n=n;
    a.onmouseout=function(){ this.firstChild.src = imgs[this.n+'_default'].src;};
    a.onmouseover=function(){ this.firstChild.src = imgs[this.n+'_hover'].src;};
    a.onmousedown=function(){ this.firstChild.src = imgs[this.n+'_selected'].src;};
    a.onmouseup=function(){ this.firstChild.src = imgs[this.n+'_hover'].src;};
    a.onclick=clickfun;
    if(title) a.title=title;
    return a;
};
var icons=[];
function $icon(n) {
    if(n > 100) n = 100;
    if(!icons[n]) {
        var img = new GIcon(null,imgdir + n + ".png");
        if(n < 10) {
            img.iconSize = new GSize(18, 19);
            img.iconAnchor = new GPoint(9, 9);
            img.infoWindowAnchor = new GPoint(9, 9);
        } else if (n < 100) {
            img.iconSize = new GSize(20, 21);
            img.iconAnchor = new GPoint(10, 10);
            img.infoWindowAnchor = new GPoint(10, 10);
        } else {
            img.iconSize = new GSize(26, 27);
            img.iconAnchor = new GPoint(13, 13);
            img.infoWindowAnchor = new GPoint(13, 13);
        }
        icons[n] = img;
    }
    return icons[n];
};


// flickr
flickr = {
_api_key : "ebed0eef1b25b738b1903ef93b8f25ee",
_secret_key : "4260ccd8c3f7837e",
_url : function(args, sign) {
    var url = 'http://api.flickr.com/services/rest/?'
    var signature = flickr._secret_key;
    var keys = [];
    for (var k in args) { keys.push(k); }
    keys.sort();
    for (var i=0; i<keys.length; i++) {
        var k = keys[i];
        var v = args[k];
//        signature = signature + k + v;
        url += (i>0?'&':'') + _esc(k) + '=' + _esc(v);
    }
//    if(sign) {
//        signature = Utilities.MD5(signature);
//        url = url + '&api_sig='+signature;
//    }
    return url;
},
callapi : function(args, obj, callback, parms, sign) {
    args.api_key = flickr._api_key;
    args.format = 'json';
    args.nojsoncallback = '1';
    if (flickr._token) { args.auth_token = flickr._token; }

    _IG_FetchContent(flickr._url(args, sign), function(str) {
        var rsp = null;
        try {
            if(str) rsp = eval('(' + str + ')');
        } finally {
            callback.call(obj, rsp, parms);
        }
    });
},
photourl : function(photo,t) {
    if(!t) return 'http://farm'+photo.farm+'.static.flickr.com/'+photo.server+'/'+photo.id+'_'+photo.secret;
    else if(t=='.') return 'http://farm'+photo.farm+'.static.flickr.com/'+photo.server+'/'+photo.id+'_'+photo.secret+'.jpg';
    else   return 'http://farm'+photo.farm+'.static.flickr.com/'+photo.server+'/'+photo.id+'_'+photo.secret+'_'+t+'.jpg';
},
pageurl : function(photo) {
    return 'http://www.flickr.com/photo.gne?id='+photo.id;
},
buddyurl : function(photo) {
    if(photo.iconserver&parseInt(photo.iconserver)>0) return 'http://farm'+photo.iconfarm+'.static.flickr.com/'+photo.iconserver+'/buddyicons/'+photo.owner+'.jpg';
    else return 'http://www.flickr.com/images/buddyicon.jpg';
}
};



// FPhotoMarker
//   overwrite function
//     onOpenInfoWindow
function FPhotoMarker(icon, photos, bounds) {
    var position = bounds.getCenter();
    FPhotoMarker.prototype.baseConstructor.call(this, position, {icon:icon});

    this.photos = photos;
    this.currpos = 0;
    this.ctx = null;
    GEvent.addListener(this, 'click', this.onClick);
};
$extend(FPhotoMarker, GMarker);
FPhotoMarker.prototype.refreshImgList = function(dir) {
    var imags = this.ctx.imags;
    
    var end = this.currpos + 5;
    if( end > imags.length) end = imags.length;
    for( var i = this.currpos; i<end; ++i) {
        var img = imags[i];
        if(!img.src) img.src=flickr.photourl(img.photo,'s');
    }

    function disappear() {
        this.getEl().style.display='none';
    };

    var c = this.currpos;
    for( var i = 0; i < imags.length; i++ ) {
        var img=imags[i];
        var s=img.style;
        
        var attr=null;
        if(dir==0) {
            switch(i) {
                case c-1: s.display='inline'; s.left='0px';  s.top='0px'; s.width=s.height='75px'; break;
                case c  : s.display='inline'; s.left='85px'; s.top='0px'; s.width=s.height='75px'; break;
                case c+1: s.display='inline'; s.left='170px';s.top='0px'; s.width=s.height='75px'; break;
                default:  s.display='none'; break;
            }
        } else if(dir>0) {
            switch(i) {
                case c-2: s.display='inline'; s.left='0px';  s.top='0px'; s.width=s.height='75px'; attr={width:{to:0},height:{to:0}}; break;
                case c-1: s.display='inline'; s.left='85px'; s.top='0px'; s.width=s.height='75px'; attr={left:{to:0}}; break;
                case c  : s.display='inline'; s.left='170px';s.top='0px'; s.width=s.height='75px'; attr={left:{to:85}};break;
                case c+1: s.display='inline'; s.left='245px';s.top='75px';s.width=s.height='0px';  attr={left:{to:170},top:{to:0},width:{to:75},height:{to:75}}; break;
                default:  s.display='none'; break;
            }
        } else if(dir<0) {
            var attr=null;
            switch(i) {
                case c-1: s.display='inline'; s.left='0px';  s.top='0px'; s.width=s.height='0px';  attr={width:{to:75},height:{to:75}}; break;
                case c  : s.display='inline'; s.left='0px';  s.top='0px'; s.width=s.height='75px'; attr={left:{to:85}}; break;
                case c+1: s.display='inline'; s.left='85px'; s.top='0px'; s.width=s.height='75px'; attr={left:{to:170}};break;
                case c+2: s.display='inline'; s.left='170px';s.top='0px'; s.width=s.height='75px'; attr={left:{to:245},top:{to:75},width:{to:0},height:{to:0}}; break;
                default:  s.display='none'; break;
            }
        }
        if(attr) {
            var myAnim = new YAHOO.util.Motion(img, attr,.2, YAHOO.util.Easing.easeOutStrong);
            if((i==this.currpos-2) || (i==this.currpos+2)) myAnim.onComplete.subscribe(disappear);
            myAnim.animate();
        }
    }

    this.ctx.titl.innerHTML=imags[this.currpos].alt;
    this.ctx.info.innerHTML=' ' + (this.currpos+1) + ' of ' + imags.length + ' ';
};

FPhotoMarker.prototype.onClick = function() {
    if(!this.ctx) {
        var ctx_ = $dom(
            '<div class="photoPanel">'+
                '<div style="height:40px; text-align:center;"></div>'+
                '<div style="height:85px;" class="photos"></div>'+
                '<div style="height:20px;"></div>'+
            '</div>');
        ctx_.titl = ctx_.childNodes[0];
        var imags = ctx_.childNodes[1]
        var ctrl = ctx_.childNodes[2];

        var pre = $cbtn('prev','Previous photo', this.prevImg);
        var nex = $cbtn('next','Next photo', this.nextImg);
        nex.marker = pre.marker = this;
        ctrl.appendChild(pre);
        ctrl.appendChild(nex);

        var info = $dom('<span/>');
        ctrl.appendChild(info);
        ctx_.info = info;

        for(var i = 0, len = this.photos.length; i < len; ++i) {
            var photo = this.photos[i];

            var img = $c('img');
            img.alt = photo.title;
            img.photo=photo;
            img.marker=this;
            img.onclick = this.onPhotoClick;
            img.style.position='absolute';
            img.style.width=img.style.height='75px';
            img.style.display='none';

            imags.appendChild(img);
        }
        this.ctx=ctx_;
        this.ctx.imags=imags.childNodes;
    }

    this.refreshImgList(0);
    this.onOpenInfoWindow();
};
FPhotoMarker.prototype.nextImg = function() {
    if( this.marker.currpos >= this.marker.ctx.imags.length-1) return;

    this.marker.currpos++;
    this.marker.refreshImgList(1);
};
FPhotoMarker.prototype.prevImg = function() {
    if( this.marker.currpos <= 0) return;

    this.marker.currpos--;
    this.marker.refreshImgList(-1);
};
FPhotoMarker.prototype.onPhotoClick = function() {
    var w = document.body.clientWidth;
    var h = document.body.clientHeight;
    var overlay = $dom(
        '<div><div class="mask" style="position:absolute; top:0px; left:0px; width:'+w+'px; height:'+h+'px;">'+
            '<div style="position:absolute; top:100px; left:'+(w-32)/2+'px;">'+
                '<img src="'+imgs['loading'].src+'"/>'+
            '</div>'+
        '</div></div>');

    var imgPreloader = new Image();
    imgPreloader.onload=function(){
        if( this.overlay.removed) return;

        var photopopup = this.imglnk.marker.onPopupPhoto.call(this.imglnk.marker, this.imglnk.photo, this.width, this.height, this.src);
        this.overlay.firstChild.firstChild.style.display='none';
        this.overlay.appendChild(photopopup);
    };
    overlay.imgPreloader = imgPreloader;
    imgPreloader.overlay = overlay;
    imgPreloader.imglnk=this;
    imgPreloader.src = flickr.photourl(this.photo,'m');

    overlay.onclick=function() {
        this.removed=true;
        this.parentNode.removeChild(this);
    };
    document.body.appendChild(overlay);
};




// FBrowser
//   overwrite function
//     updateviewCallback 
//     ondragend
//     clearPanel
//     newMaker
function FBrowser() {
    FBrowser.prototype.baseConstructor.apply(this, arguments);
    this.pageCurr = 1;
    this.pageTotal = 1;
    this.currZoom = 0;
    this._lastcenter = null;

    GEvent.addListener(this, "dragend", this.ondragend);
    GEvent.addListener(this, "zoomend", this.onzoomend);

    var nowy = new Date().getFullYear();
    var settingstr = '<span>'+msg_date+'<select id="fgs_select_year">';
    for(var i = 0; i<10; ++i) {
        settingstr += '<option value="'+(nowy-i)+'">'+(nowy-i)+'</option>';
    }
    settingstr += '</select> - <select id="fgs_select_month"><option value="all">All</option>';
    for(var i = 1; i<=12; ++i) {
        if(i < 10) settingstr += '<option value="0'+i+'">0'+i+'</option>';
        else       settingstr += '<option value="'+i+'">'+i+'</option>';
    }
    settingstr += 
        '</select><br />'+msg_sort+'<select id="fgs_select_sort">'+
            '<option value="interestingness-desc">'+msg_interestingnessdesc+'</option>'+
            '<option value="interestingness-asc">'+msg_interestingnessasc+'</option>'+
            '<option value="date-taken-desc">'+msg_datetakendesc+'</option>'+
            '<option value="date-taken-asc">'+msg_datetakenasc+'</option>'+
            '<option value="date-posted-desc">'+msg_dateposteddesc+'</option>'+
            '<option value="date-posted-asc">'+msg_datepostedasc+'</option>'+
            '<option value="relevance">'+msg_relevance+'</option></select>';
    settingstr += '<br />'+msg_search+'<form id="fgs_search_form"><input id="fgs_search" type="text"/><input type="submit"/></form></span>';
    settingDiv.appendChild($dom(settingstr));
    var ysel = $('fgs_select_year');
    var msel = $('fgs_select_month');
    var ssel = $('fgs_select_sort');
    var sform = $('fgs_search_form');
    ysel.map = msel.map = ssel.map = sform.map = this;
    ysel.onchange = msel.onchange = ssel.onchange = sform.onsubmit = this.changeSetting;

    var pre = $cbtn('prev','Previous Page', this.prevPage);
    var nex = $cbtn('next','Next Page', this.nextPage);
    var pageInfo = $dom('<span/>');
    pageDiv.appendChild(pre);
    pageDiv.appendChild(nex);
    pageDiv.appendChild(pageInfo);
    pageDiv.pageInfo = pageInfo;
    pre.map = nex.map = this;
};
$extend(FBrowser, GMap2);
FBrowser.prototype.updateview = function(bound, currPage, level) {
    if(level) {
        this.currZoom = level;
    }
    if( this.currZoom < MIN_ZOOM || this.currZoom > MAX_ZOOM) {
        return;
    }
    if(currPage) {
        this.pageCurr = currPage;
    } else {
        this.pageCurr = 1;
        this.pageTotal = 1;
    }

    this.updateviewCallback(bound);
};
FBrowser.prototype.changeSetting = function() {
    this.map.updateview();
    return false;
};
FBrowser.prototype.prevPage = function() {
    var map = this.map;
    if( map.pageCurr <= 1) return;

    map.updateview(null, map.pageCurr-1);
};
FBrowser.prototype.nextPage = function() {
    var map = this.map;
    if( map.pageCurr >= map.pageTotal) return;

    map.updateview(null, map.pageCurr+1);
};
FBrowser.prototype.onzoomend = function(oldLevel,newLevel) {
    this.updateview(null, null, newLevel);
};
FBrowser.prototype.refreshData = function(bound) {
    var sw = bound.getSouthWest();
    var ne = bound.getNorthEast();
    var w = sw.lng();
    var e = ne.lng();
    var n = ne.lat();
    var s = sw.lat();
    var span = bound.toSpan();
    var wid = span.lng();
    var hig = span.lat();

    w += wid/5;
    if( w > 180) w -= 360;
    e -= wid/5;
    if( e <= -180) e += 360;

    if( e < w) {
        if( (180+e) > (180-w)) {
            w = -180;
        } else {
            e = 180;
        }
    }
    n-=hig/5;
    s+=hig/5;

    
    var year = $('fgs_select_year').value;
    var month = $('fgs_select_month').value;
    var sort = $('fgs_select_sort').value;
    var searchtxt = $('fgs_search').value;

    var max_date, min_date;
    if(month == 'all') {
        min_date = year+'-01-01'; max_date = year+'-12-31';
    } else {
        min_date = year+'-'+month+'-01'; max_date = year+'-'+month+'-31';
    }

    var points = [];
    points.push(new GLatLng(n,e));
    points.push(new GLatLng(n,w));
    points.push(new GLatLng(s,w));
    points.push(new GLatLng(s,e));
    points.push(new GLatLng(n,e));

    this.clearPanel();
    this.closeInfoWindow();
    if(_trim(searchtxt)) {
        flickr.callapi({method: 'flickr.photos.search',  extras:'geo,date_taken,owner_name,icon_server', bbox:w+','+s+','+e+','+n, text:_trim(searchtxt), min_taken_date:min_date, max_taken_date:max_date, sort:sort, page:this.pageCurr, per_page:100}, this, this.search_callback, points);
    } else {
        flickr.callapi({method: 'flickr.photos.search',  extras:'geo,date_taken,owner_name,icon_server', bbox:w+','+s+','+e+','+n,                        min_taken_date:min_date, max_taken_date:max_date, sort:sort, page:this.pageCurr, per_page:100}, this, this.search_callback, points);
    }
};
FBrowser.prototype.search_callback = function(rsp, points) {
    try {
        if(!rsp || rsp.stat != 'ok') return;

        var delta = deltas[this.currZoom];

        var photoset = rsp.photos;
        var photos = photoset.photo;
        this.pageCurr = parseInt(photoset.page);
        this.pageTotal = parseInt(photoset.pages);
        this.total = parseInt(photoset.total);
        this.perpage = parseInt(photoset.perpage);

        var start, end;
        if(this.total == 0) {
            start = end = 0;
        } else {
            start = ((this.pageCurr-1)*this.perpage)+1;
            end = ((this.pageCurr)*this.perpage);
        }
        if(end > this.total) end = this.total;
        pageDiv.pageInfo.innerHTML = ' '+msg_currpage.replace('$1', start).replace('$2', end).replace('$3', this.total);;

        this.clearOverlays();

        this.addOverlay(new GPolyline(points, '#0000FF', 1, .3));

        var temp_bounds = new Array();
        var temp_photos = new Array();
        for (var i=0,len=photos.length; i<len; i++) {
            var photo = photos[i];
            var lat = parseFloat(photo.latitude);
            var lon = parseFloat(photo.longitude);
            if(lat == 0 && lon == 0) { continue; }

            var pos = new GLatLng(lat, lon);

            var isMerged = false;
            for (var j=0,len2=temp_bounds.length; j<len2; j++) {
                var bb = temp_bounds[j];
                if( bb.contains(pos)) {
                    isMerged = true;
                    var ps = temp_photos[j];
                    ps[ps.length] = photo;
                    break;
                }
            }

            if(!isMerged) {
                var ps = new Array();
                ps[0] = photo;
                
                var bound = new GLatLngBounds(new GLatLng(pos.lat()-delta, pos.lng()-delta), new GLatLng(pos.lat()+delta, pos.lng()+delta));
                temp_bounds[temp_bounds.length] = bound;
                temp_photos[temp_photos.length] = ps;
            }
        }

        for (var i=0,len=temp_photos.length; i<len ; i++) {
            if(temp_photos[i].length == 0) { continue; }
            this.addOverlay(this.newMaker($icon(temp_photos[i].length), temp_photos[i], temp_bounds[i]));
        }
    } finally {
        this.onReceivedData();
    }
};

//-- flickr gmap show common api --













var settingDiv = $('settingDiv');
var pageDiv = $('pageDiv');
var photoDiv = $('photoDiv');

function toggle() {
    if(settingDiv.style.display == 'none') settingDiv.style.display='block';
    else settingDiv.style.display='none';
};
var upbtn = $cbtn('updown','', toggle);
upbtn.className += ' right';
pageDiv.appendChild(upbtn);


// mask layer
var masklayer = $dom(
    '<div class="mask" style="position:absolute; top:0px; left:0px; cursor:wait; display:none;">'+
        '<div style="position:absolute; top:100px;">'+
            '<img src="http://flickr-gmap-show.googlecode.com/svn/trunk/pics/loading.gif"/>'+
        '</div>'+
    '</div>');
masklayer.init=false;
function mask(gmap) {
    if(!masklayer.init) {
        document.body.appendChild(masklayer);
        masklayer.init = true;
    }
    var w = document.body.clientWidth;
    var h = document.body.clientHeight;
    masklayer.style.width = w+'px';
    masklayer.style.height = h+'px';
    masklayer.firstChild.style.left = (w-32)/2 + 'px';
    masklayer.style.display = 'block';
};
function unmask() {
    masklayer.style.display = 'none';
};







var FGS = {
    init : function() {
        _IG_Analytics(_uacct, "/mapplet");


function FPhotoMarkerMapplet() {
    FPhotoMarkerMapplet.prototype.baseConstructor.apply(this, arguments);
};
$extend(FPhotoMarkerMapplet, FPhotoMarker);
FPhotoMarkerMapplet.prototype.onOpenInfoWindow = function() {
    while(photoDiv.firstChild) {
        photoDiv.removeChild(photoDiv.firstChild);
    }
    photoDiv.appendChild(this.ctx);
    
    var rand;
    if(this.photos.length<2) rand = 0;
    else rand = Math.round((this.photos.length-1)*Math.random());
    var photo = this.photos[rand];
    var owner = photo.ownername;
    if(!owner) owner = photo.owner;
    var datetaken = photo.datetaken.substr(0,10);

    // !! css style can't apply to info window !!
    var infowin = 
        '<div style="font-size:12px; width:240px;">'+
            '<b style="display: block; margin-bottom: 4px;">'+photo.title+'</b>'+
            '<img style="margin-bottom:4px;" src="' + flickr.photourl(photo,'m') + '"/><br />'+
            '<a target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/><img style="float:right;width:48px;height:48px;border:0px;" src="'+flickr.buddyurl(photo)+'"/></a>'+
            '<i>'+msg_postby.replace('$1','<a target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/>'+owner+'</a>')+'</i><br />'+
            '<i>'+msg_takenon.replace('$1', datetaken)+'</i><br />'+
            '<a target="_blank" href="'+flickr.pageurl(photo)+'">'+msg_viewonflickr+'</a></div>';
    this.openInfoWindowHtml(infowin, {disableGoogleLinks:true});
};
FPhotoMarkerMapplet.prototype.onPopupPhoto = function(photo, width, height, src) {
    var w = width+20;
    var lef = (document.body.clientWidth-w)/2;
    if(lef < 0) lef=0;

    var hei = 50;

    var owner = photo.ownername;
    if(!owner) owner = photo.owner;
    var datetaken = photo.datetaken.substr(0,10);
    var photoctx = $dom(
        '<div class="popup" style="position:absolute; top:'+hei+'px; left:'+lef+'px; width:'+w+'px;">'+
            '<div style="margin:10px;">'+
                '<b style="display: block; margin-bottom: 4px;">'+photo.title+'</b>'+
                '<img style="margin-bottom:4px;" src="'+src+'"/><br />'+
                '<a style="float:right;" target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/><img style="width:48px;height:48px;border:0px;" src="'+flickr.buddyurl(photo)+'"/></a>'+
                '<i>'+msg_postby.replace('$1','<a target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/>'+owner+'</a>')+'</i><br />'+
                '<i>'+msg_takenon.replace('$1', datetaken)+'</i><br />'+
                '<a target="_blank" href="'+flickr.pageurl(photo)+'">'+msg_viewonflickr+'</a>'+
            '</div>'+
        '</div>');
    return photoctx;
};



function FBrowserMapplet() {
    FBrowserMapplet.prototype.baseConstructor.apply(this, arguments);
};
$extend(FBrowserMapplet, FBrowser);
FBrowserMapplet.prototype.updateviewCallback = function(bound) {
    mask(this);
    if(bound) {
        this._lastcenter = bound.getCenter();
        this.refreshData(bound);
    } else {
        var map = this;
        map.getBoundsAsync(function(bound) {
            map._lastcenter = bound.getCenter();
            map.refreshData(bound);
        });
    }
};
FBrowserMapplet.prototype.ondragend = function() {
    var map = this;
    map.getBoundsAsync( function(bound) {
        var center = bound.getCenter();
        var span   = bound.toSpan();

        if(map._lastcenter) {
            var deltaX  = Math.abs(center.lng() - map._lastcenter.lng());
            var deltaY  = Math.abs(center.lat() - map._lastcenter.lat());
            var boundsX = span.lng();
            var boundsY = span.lat();
            if ((deltaX < 0.3*boundsX) && (deltaY < 0.3*boundsY)) {
                return;
            }
        }
        map.updateview(bound);
    });
};
FBrowserMapplet.prototype.clearPanel = function() {
    while(photoDiv.firstChild) {
        photoDiv.removeChild(photoDiv.firstChild);
    }
};
FBrowserMapplet.prototype.newMaker = function(icon, photos, bound) {
    return new FPhotoMarkerMapplet(icon, photos, bound);
};
FBrowserMapplet.prototype.onReceivedData = function() {
    unmask();
};



        var m = new FBrowserMapplet();
        m.getZoomAsync(function(z) {
            if(z > MAX_ZOOM) {
                m.setZoom(MAX_ZOOM);
            } else if(z < MIN_ZOOM) {
                m.setZoom(MIN_ZOOM);
            } else {
                m.updateview(null, null, z);
            }
        });
    }
};

_IG_RegisterOnloadHandler(FGS.init);
</script>
]]></Content>

</Module>
