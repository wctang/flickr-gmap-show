<?xml version="1.0" encoding="UTF-8"?>
<Module>
<ModulePrefs title="Flickr Gmap Show" description="Browse flickr photos on Google Maps" 
author="wctang" author_photo="http://farm1.static.flickr.com/219/buddyicons/81718017@N00.jpg" author_email="wctang+fgsfeedback@gmail.com"
author_link="http://blog.wctang.info/" author_location="Kaohsiung, Taiwan" author_affiliation="wctang.info"
title_url="http://code.google.com/p/flickr-gmap-show/" screenshot="http://flickr-gmap-show.googlecode.com/svn/trunk/pics/fgs_mapplet_preview.png"
thumbnail="http://flickr-gmap-show.googlecode.com/svn/trunk/pics/fgs_mapplet_thumb.png">
  <Require feature="sharedmap"/>
  <Require feature="setprefs" />
  <Require feature="analytics"/>
</ModulePrefs>
<UserPref name="year" display_name="Year : " datatype="enum" default_value="2007">
    <EnumValue value="2007" display_value="2007"/>
    <EnumValue value="2006" display_value="2006"/>
    <EnumValue value="2005" display_value="2005"/>
    <EnumValue value="2004" display_value="2004"/>
    <EnumValue value="2003" display_value="2003"/>
    <EnumValue value="2002" display_value="2002"/>
    <EnumValue value="2001" display_value="2001"/>
    <EnumValue value="2000" display_value="2000"/>
    <EnumValue value="1999" display_value="1999"/>
    <EnumValue value="1998" display_value="1998"/>
    <EnumValue value="1997" display_value="1997"/>
</UserPref>
<UserPref name="month" display_name="Month : " datatype="enum" default_value="all">
    <EnumValue value="all" display_value="All"/>
    <EnumValue value="01" display_value="01"/>
    <EnumValue value="02" display_value="02"/>
    <EnumValue value="03" display_value="03"/>
    <EnumValue value="04" display_value="04"/>
    <EnumValue value="05" display_value="05"/>
    <EnumValue value="06" display_value="06"/>
    <EnumValue value="07" display_value="07"/>
    <EnumValue value="08" display_value="08"/>
    <EnumValue value="09" display_value="09"/>
    <EnumValue value="10" display_value="10"/>
    <EnumValue value="11" display_value="11"/>
    <EnumValue value="12" display_value="12"/>
</UserPref>
<UserPref name="tags" display_name="Tag : " datatype="string" default_value="">
</UserPref>

<Content type="html"><![CDATA[
<div style='margin-bottom:10px;' id='pageContent'></div>
<div style='margin-bottom:10px;' id='info'></div>
<div style='margin-bottom:10px;' id='photoContent'></div>

<script type="text/javascript">

var _uacct = "UA-359113-4";

var deltas = [0,0,0,0,0,
2.267663023758292,
1.3145392018751147,
0.6500680377362116,
0.3163602596118622,
0.15527253613234748,
0.0768052354586608,
0.038196128656935,
0.01904511588784885,
0.009509249359091143,
0.004751266989799774,
0.002374791275833843,
0.0011871839595940514,
0.0005935388549467291,
0.0002967560452766804];
var MAX_ZOOM = 18;
var MIN_ZOOM = 5;
var currZoom = 0;

var prefs = new _IG_Prefs(__MODULE_ID__);

var imgdir = 'http://flickr-gmap-show.googlecode.com/svn/trunk/pics/';
var imgs = {
    loading : imgdir+'loading.gif',

    close_default  : imgdir+'simple_close_default.gif',
    close_hover    : imgdir+'simple_close_hover.gif',
    close_selected : imgdir+'simple_close_selected.gif',

    prev_default  : imgdir+'simple_prev_default.gif',
    prev_hover    : imgdir+'simple_prev_hover.gif',
    prev_selected : imgdir+'simple_prev_selected.gif',

    next_default  : imgdir+'simple_next_default.gif',
    next_hover    : imgdir+'simple_next_hover.gif',
    next_selected : imgdir+'simple_next_selected.gif',
    
    popup_default : imgdir+'simple_new_window_default.gif',
    popup_hover   : imgdir+'simple_new_window_hover.gif',
    popup_selected: imgdir+'simple_new_window_selected.gif'
};

// utility
function $(e) { return document.getElementById(e); };
function $c(e) { return document.createElement(e); };
function $a(e,a) { return e.getAttribute(a); };
function $dom(s) { var d=$c('div');d.innerHTML=s;return d.firstChild; };
function $extend(subc,basec) { 
    function inheritance(){}; inheritance.prototype=basec.prototype; subc.prototype=new inheritance(); 
    subc.prototype.constructor = subc; subc.prototype.baseConstructor = basec; subc.superClass = basec.prototype;
};
function $cbtn(n, title, href, target) {
    var a = $dom('<a style="cursor:pointer;"><img src="'+imgs[n+'_default']+'" style="cursor:pointer;border:0;"/></a>');
    a.n=n;
    a.onmouseout=function(){ this.firstChild.src = imgs[this.n+'_default'];};
    a.onmouseover=function(){ this.firstChild.src = imgs[this.n+'_hover'];};
    a.onmousedown=function(){ this.firstChild.src = imgs[this.n+'_selected'];};
    a.onmouseup=function(){ this.firstChild.src = imgs[this.n+'_hover'];};
    if(title) a.title=title;
    if(href) a.href=href;
    if(target) a.target=target;
    return a;
}
var icons=[];
function $icon(n) {
    if(n > 100) n = 100;
    if(!icons[n]) {
        var img = new GIcon(null,imgdir + n + ".png");
        if(n < 10) {
            img.iconSize = new GSize(18, 19);
            img.iconAnchor = new GPoint(9, 9);
            img.infoWindowAnchor = new GPoint(9, 9);
        } else if (n < 100) {
            img.iconSize = new GSize(20, 21);
            img.iconAnchor = new GPoint(10, 10);
            img.infoWindowAnchor = new GPoint(10, 10);
        } else {
            img.iconSize = new GSize(26, 27);
            img.iconAnchor = new GPoint(13, 13);
            img.infoWindowAnchor = new GPoint(13, 13);
        }
        icons[n] = img;
    }
    return icons[n];
}

// mask layer
var masklayer = $dom(
    '<div style="position:absolute; background:black; top:0px; left:0px; opacity:.8;-moz-opacity:.8;filter:alpha(opacity=80); cursor:wait; display:none;">'+
        '<div style="position:absolute; top:100px; background:white;">'+
            '<img src="'+imgs['loading']+'"/>'+
        '</div>'+
    '</div>');
masklayer.init=false;
function mask() {
    if(!masklayer.init) {
        document.body.appendChild(masklayer);
        masklayer.init = true;
    }
    var w = document.body.clientWidth;
    var h = document.body.clientHeight;
    masklayer.style.width = w+'px';
    masklayer.style.height = h+'px';
    masklayer.firstChild.style.left = (w-32)/2 + 'px';
    masklayer.style.display = 'block';
};
function unmask() {
    masklayer.style.display = 'none';
};

// flickr
flickr = {
_api_key : "ebed0eef1b25b738b1903ef93b8f25ee",
_secret_key : "4260ccd8c3f7837e",
_callbacks : {},
_callback_number : 0,
_url : function(args, sign, type) {
    if (!type) { type = 'rest'; }
    var url = 'http://api.flickr.com/services/'+type+'/?'
    var signature = flickr._secret_key;
    var keys = new Array ();
    for (var k in args) { keys.push (k); }
    keys.sort ();
    for (var i=0; i<keys.length; i++) {
        var k = keys[i];
        var v = args[k];
//        signature = signature + k + v;
        url = url + (i>0?'&':'') + escape(k) + '=' + escape(v);
    }
//    if(sign) {
//        signature = Utilities.MD5(signature);
//        url = url + '&api_sig='+signature;
//    }
    return url;
},
callapi : function(args, obj, callback, sign) {
    args.api_key = flickr._api_key;
    args.format = 'json';
    args.nojsoncallback = '1';
    if (flickr._token) { args.auth_token = flickr._token; }

    _IG_FetchContent(flickr._url(args, sign), function(str) {
        if (!str) {
            return;
        }

        try {
            var rsp = eval('(' + str + ')');
            callback.call(obj, rsp);
        } finally {
            unmask();
        }
    });
},
photourl : function(photo,t) {
    if(!t) return 'http://farm'+photo.farm+'.static.flickr.com/'+photo.server+'/'+photo.id+'_'+photo.secret;
    else if(t=='.') return 'http://farm'+photo.farm+'.static.flickr.com/'+photo.server+'/'+photo.id+'_'+photo.secret+'.jpg';
    else   return 'http://farm'+photo.farm+'.static.flickr.com/'+photo.server+'/'+photo.id+'_'+photo.secret+'_'+t+'.jpg';
},
pageurl : function(photo) {
    return 'http://www.flickr.com/photo.gne?id='+photo.id;
},
buddyurl : function(photo) {
    if(photo.iconserver&parseInt(photo.iconserver)>0) return 'http://farm'+photo.iconfarm+'.static.flickr.com/'+photo.iconserver+'/buddyicons/'+photo.owner+'.jpg';
    else return 'http://www.flickr.com/images/buddyicon.jpg';
}

};









function FPhotoMarker(icon, photos, bounds) {
    if(!FPhotoMarker.init) return;

    var position = bounds.getCenter();
    this.baseConstructor.call(this, position, {icon:icon});

    this.photos_ = photos;
    this.currpos_ = 0;
    GEvent.addListener(this, 'click', this.onClick);
};
FPhotoMarker.create = function () {
    if(!FPhotoMarker.init) {
        $extend(FPhotoMarker, GMarker);

        FPhotoMarker.prototype.refreshImgList = function() {
            if( this.currpos_ == 0) {
                var to = this.imagesDiv_.childNodes.length > 5 ? 5 : this.imagesDiv_.childNodes.length;
                for(var i = 0; i< to; ++i) {
                    var a = this.imagesDiv_.childNodes[i].childNodes[0];
                    var img = a.childNodes[0];
                    if( !img.src) {
                        img.src=flickr.photourl(a.photo,'s');
                    }
                }
            } else {
                var span = this.imagesDiv_.childNodes[this.currpos_+4];
                if(span) {
                    var a = span.childNodes[0];
                    var img = a.childNodes[0];
                    if( !img.src) {
                        img.src=flickr.photourl(a.photo,'s');
                    }
                }
            }

            for( var i = 0; i < this.imagesDiv_.childNodes.length; i++ ) {
                var node = this.imagesDiv_.childNodes[i];
                if(i == this.currpos_) {
                    node.style.display = 'inline';
                    node.childNodes[0].childNodes[0].style.width=node.childNodes[0].childNodes[0].style.height='75px';
                    node.style.top = '0px';
                    node.style.left = '80px';
                } else if(i == this.currpos_-1) {
                    node.style.display = 'inline';
                    node.childNodes[0].childNodes[0].style.width = node.childNodes[0].childNodes[0].style.height = '45px';
                    node.style.top = '15px';
                    node.style.left = '15px';
                } else if(i == this.currpos_+1) {
                    node.style.display = 'inline';
                    node.childNodes[0].childNodes[0].style.width = node.childNodes[0].childNodes[0].style.height = '45px';
                    node.style.top = '15px';
                    node.style.left = '175px';
                } else {
                    node.style.display = 'none';
                }
            }
            this.title_.innerHTML=this.imagesDiv_.childNodes[this.currpos_].childNodes[0].title;
            this.info_.innerHTML=' ' + (this.currpos_+1) + ' of ' + this.imagesDiv_.childNodes.length + ' ';
        };

        FPhotoMarker.prototype.onClick = function() {
            if(!this.infoContent_) {
                var infoContent = $dom(
                    '<div style="height:140px;width:250px;border:solid 1px gray;padding:10px;margin:10px;">'+
                        '<div style="position:relative; left:0px; height:40px; width:250px; text-align:center;"></div>'+
                        '<div style="position:relative; left:0px; height:80px; width:250px;"></div>'+
                        '<div style="position:relative; left:0px; height:20px; width:250px;"></div>'+
                    '</div>');
                var titleDiv = infoContent.childNodes[0];
                var imagesDiv = infoContent.childNodes[1]
                var controlDiv = infoContent.childNodes[2];
                var pre = $cbtn('prev','Previous photo');
                var nex = $cbtn('next','Next photo');
                var info = $dom('<span/>');
                nex.marker = pre.marker = this;
                pre.onclick = this.prevImg;
                nex.onclick = this.nextImg;
                controlDiv.appendChild(pre);
                controlDiv.appendChild(nex);
                controlDiv.appendChild(info);

                for(var i = 0, len = this.photos_.length; i < len; ++i) {
                    var photo = this.photos_[i];

                    var img = $c('img');

                    img.alt = photo.title;
                    img.width=img.height=75;
                    img.style.border = 'dotted 2px gray';
                    img.style.padding = '1px';

                    var imglink = $c('a');
                    imglink.title = photo.title;
                    imglink.photo=photo;
                    imglink.onclick = this.onPhotoClick;
                    imglink.onmouseover = this.onPhotoHover;
                    imglink.onmouseout = this.onPhotoHoverOut;
                    imglink.style.cursor = 'pointer';

                    var imgspan = $c('span');
                    imgspan.id='pic'+i;
                    imgspan.style.position='absolute';
                    imgspan.style.display='none';

                    imglink.appendChild(img);
                    imgspan.appendChild(imglink);
                    imagesDiv.appendChild(imgspan);
                }
                this.infoContent_=infoContent;
                this.title_=titleDiv;
                this.imagesDiv_=imagesDiv;
                this.info_=info;
            }

            this.refreshImgList();
            var photoContent = $('photoContent');
            while(photoContent.firstChild) {
                photoContent.removeChild(photoContent.firstChild);
            }
            photoContent.appendChild(this.infoContent_);
            
            var rand;
            if(this.photos_.length<2) rand = 0;
            else rand = Math.round((this.photos_.length-1)*Math.random());
            var photo = this.photos_[rand];
            var owner = photo.ownername;
            if(!owner) owner = photo.owner;
            var datetaken = photo.datetaken.substr(0,10);
            var infowin = 
                '<div style="font-size: 12px; width: 240px;">'+
                    '<b style="display: block; margin-bottom: 4px;">'+photo.title+'</b>'+
                    '<img style="margin-bottom:4px;" src="' + flickr.photourl(photo,'m') + '"/><br />'+
                    '<a target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/><img style="float:right;width:48px;height:48px;border:0px;" src="'+flickr.buddyurl(photo)+'"/></a>'+
                    '<i>Posted by <a target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/>'+owner+'</a></i><br />'+
                    '<i>Taken on '+datetaken+'</i><br />'+
                    '<a target="_blank" href="'+flickr.pageurl(photo)+'">View this photo on flickr</a></div>';
            this.openInfoWindowHtml(infowin, {disableGoogleLinks:true});
        };
        FPhotoMarker.prototype.nextImg = function() {
            if( this.marker.currpos_ >= this.marker.imagesDiv_.childNodes.length-1) {
                return;
            }
            this.marker.currpos_++;
            this.marker.refreshImgList();
        };
        FPhotoMarker.prototype.prevImg = function() {
            if( this.marker.currpos_ <= 0) {
                return;
            }
            this.marker.currpos_--;
            this.marker.refreshImgList();
        };
        FPhotoMarker.prototype.onPhotoHover = function() {
            this.firstChild.style.border = 'dotted 2px red';
        }
        FPhotoMarker.prototype.onPhotoHoverOut = function() {
            this.firstChild.style.border = 'dotted 2px gray';
        }
        FPhotoMarker.prototype.onPhotoClick = function() {
            var w = document.body.clientWidth;
            var h = document.body.clientHeight;
            var overlay = $dom(
                '<div><div style="position:absolute; top:0px; left:0px; width:'+w+'px; height:'+h+'px; background:black; opacity:.8;-moz-opacity:.8;filter:alpha(opacity=80);">'+
                    '<div style="position:absolute; top:100px; left:'+(w-32)/2+'px; background:white;">'+
                        '<img src="'+imgs['loading']+'"/>'+
                    '</div>'+
                '</div></div>');

            var imgPreloader = new Image();
            imgPreloader.onload=function(){
                if( this.overlay.removed) return;

                var w = this.width+20;
                var lef = (document.body.clientWidth-w)/2;
                if(lef < 0) lef=0;

                var photo = this.photo;
                var owner = photo.ownername;
                if(!owner) owner = photo.owner;
                var datetaken = photo.datetaken.substr(0,10);
                var photoctx = $dom(
                    '<div style="position:absolute; top:50px; left:'+lef+'px; width:'+w+'px; font-size: 12px; background:white;">'+
                        '<div style="margin:10px;">'+
                            '<b style="display: block; margin-bottom: 4px;">'+photo.title+'</b>'+
                            '<img style="margin-bottom:4px;" src="'+this.src+'"/><br />'+
                            '<a style="float:right;" target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/><img style="width:48px;height:48px;border:0px;" src="'+flickr.buddyurl(photo)+'"/></a>'+
                            '<i>Posted by <a target="_blank" href="http://www.flickr.com/photos/'+photo.owner+'/"/>'+owner+'</a></i><br />'+
                            '<i>Taken on '+datetaken+'</i><br />'+
                            '<a target="_blank" href="'+flickr.pageurl(photo)+'">View this photo on flickr</a>'+
                        '</div>'+
                    '</div>');

                this.overlay.firstChild.firstChild.style.display='none';
                this.overlay.appendChild(photoctx);
            };
            overlay.imgPreloader = imgPreloader;
            imgPreloader.overlay = overlay;
            imgPreloader.photo=this.photo;
            imgPreloader.src = flickr.photourl(this.photo,'m');

            overlay.onclick=function() {
                this.removed=true;
                this.parentNode.removeChild(this);
            };
            document.body.appendChild(overlay);
        };

        FPhotoMarker.init=true;
    }
    return new FPhotoMarker(arguments[0],arguments[1],arguments[2]);
};



function FBrowser() {
    if(!FBrowser.init) return;
    this.baseConstructor.apply(this, arguments);
    this.pageCurr = 1;
    this.pageTotal = 1;
    this._lastcenter = new GLatLng(0, 0);
    GEvent.addListener(this, "dragend", this.ondragend);
    GEvent.addListener(this, "zoomend", this.onzoomend);

    var pre = $cbtn('prev','Previous Page');
    var nex = $cbtn('next','Next Page');
    var pageInfo = $dom('<span/>');
    pre.onclick = this.prevPage;
    nex.onclick = this.nextPage;
    var pageContent = $('pageContent');
    pageContent.appendChild(pre);
    pageContent.appendChild(nex);
    pageContent.appendChild(pageInfo);
    pageContent.pageInfo = pageInfo;
    pre.map = nex.map = this;
};
FBrowser.create = function() {
    if(!FBrowser.init) {
        $extend(FBrowser, GMap2);

        FBrowser.prototype.updateview = function(bound, currPage, level) {
            var map = this;
            if(level) {
                currZoom = level;
            }
            if( currZoom < MIN_ZOOM || currZoom > MAX_ZOOM) {
                return;
            }
            if(currPage) {
                map.pageCurr = currPage;
            } else {
                map.pageCurr = 1;
                map.pageTotal = 1;
            }

            mask();
            if(bound) {
                map._lastcenter = bound.getCenter();
                map.refreshData(bound);
            } else {
                map.getBoundsAsync(function(bound) {
                    map._lastcenter = bound.getCenter();
                    map.refreshData(bound);
                });
            }
        };

        FBrowser.prototype.prevPage = function() {
            var map = this.map;
            if( map.pageCurr <= 1) {
                return;
            }
            map.updateview(null, map.pageCurr-1);
        };
        FBrowser.prototype.nextPage = function() {
            var map = this.map;
            if( map.pageCurr >= map.pageTotal) {
                return;
            }
            map.updateview(null, map.pageCurr+1);
        };
        FBrowser.prototype.ondragend = function() {
            var map = this;
            map.getBoundsAsync( function(bound) {
                var center = bound.getCenter();
                var delta = deltas[currZoom];
                if(Math.abs(center.lat()-map._lastcenter.lat())<delta && Math.abs(center.lng()-map._lastcenter.lng())<delta ) {
                    return;
                } else {
                    map.updateview(bound);
                }
            });
        };
        FBrowser.prototype.onzoomend = function(oldLevel,newLevel) {
            this.updateview(null, null, newLevel);
        }
        FBrowser.prototype.refreshData = function(bound) {
            var sw = bound.getSouthWest();
            var ne = bound.getNorthEast();
            var w = sw.lng();
            var e = ne.lng();
            var n = ne.lat();
            var s = sw.lat();
            var wid;
            if( e < w) {
                wid = 360+e-w;
            } else {
                wid = e - w;
            }
            var hig = n - s;

            w += wid/5;
            if( w > 180) w -= 360;
            e -= wid/5;
            if( e <= -180) e += 360;

            if( e < w) {
                if( (180+e) > (180-w)) {
                    w = -180;
                } else {
                    e = 180;
                }
            }
            n-=hig/5;
            s+=hig/5;

            var tagstr = prefs.getString('tags');
            var year = parseInt(prefs.getString('year'));
            var month = prefs.getString('month');

            var max_date, min_date;
            if(month == 'all') {
                min_date = year+'-01-01'; max_date = year+'-12-31';
            } else {
                min_date = year+'-'+month+'-01'; max_date = year+'-'+month+'-31';
            }

            var photoContent = $('photoContent');
            while(photoContent.firstChild) {
                photoContent.removeChild(photoContent.firstChild);
            }
            this.closeInfoWindow();
            if(tagstr) {
                flickr.callapi({method: 'flickr.photos.search',  extras:'geo,date_taken,owner_name,icon_server', bbox:w+','+s+','+e+','+n, tags:tagstr, min_taken_date:min_date, max_taken_date:max_date, sort:'date-taken-desc', page:this.pageCurr, per_page:100}, this, this.search_callback);
            } else {
                flickr.callapi({method: 'flickr.photos.search',  extras:'geo,date_taken,owner_name,icon_server', bbox:w+','+s+','+e+','+n,              min_taken_date:min_date, max_taken_date:max_date, sort:'date-taken-desc', page:this.pageCurr, per_page:100}, this, this.search_callback);
            }
        };

        FBrowser.prototype.search_callback = function(rsp) {
            if(rsp.stat != 'ok') {
                return;
            }

            var delta = deltas[currZoom]/3;

            var photoset = rsp.photos;
            var photos = photoset.photo;
            this.pageCurr = parseInt(photoset.page);
            this.pageTotal = parseInt(photoset.pages);
            this.total = parseInt(photoset.total);
            this.perpage = parseInt(photoset.perpage);

            var pageInfo = $('pageContent').pageInfo;
            var start, end;
            if(this.total == 0) {
                start = end = 0;
            } else {
                start = ((this.pageCurr-1)*this.perpage)+1;
                end = ((this.pageCurr)*this.perpage);
            }
            if(end > this.total) end = this.total;
            pageInfo.innerHTML = ' '+start+' ~ '+end+' of '+this.total+' photos.';

            var year = parseInt(prefs.getString('year'));
            var month = prefs.getString('month');
            var tagstr = prefs.getString('tags');
            if(month == 'all') {
                $('info').innerHTML = '<h3 style="margin:0px;">Show ' + year + ' photos.</h3>';
            } else {
                $('info').innerHTML = '<h3 style="margin:0px;">Show ' + year + '/' + month + ' photos.</h3>';
            }
            if(tagstr) {
                $('info').innerHTML += '<h4 style="margin:0px;">with Tag: '+tagstr+'</h4>';
            }

            this.clearOverlays();

            var temp_bounds = new Array();
            var temp_photos = new Array();
            for (var i=0,len=photos.length; i<len; i++) {
                var photo = photos[i];
                var lat = parseFloat(photo.latitude);
                var lon = parseFloat(photo.longitude);
                if(lat == 0 && lon == 0) { continue; }

                var pos = new GLatLng(lat, lon);

                var isMerged = false;
                for (var j=0,len2=temp_bounds.length; j<len2; j++) {
                    var bb = temp_bounds[j];
                    if( bb.contains(pos)) {
                        isMerged = true;
                        var ps = temp_photos[j];
                        ps[ps.length] = photo;
                        break;
                    }
                }

                if(!isMerged) {
                    var ps = new Array();
                    ps[0] = photo;
                    
                    var bound = new GLatLngBounds(new GLatLng(pos.lat()-delta, pos.lng()-delta), new GLatLng(pos.lat()+delta, pos.lng()+delta));
                    temp_bounds[temp_bounds.length] = bound;
                    temp_photos[temp_photos.length] = ps;
                }
            }

            for (var i=0,len=temp_photos.length; i<len ; i++) {
                if(temp_photos[i].length == 0) { continue; }
                this.addOverlay(FPhotoMarker.create($icon(temp_photos[i].length), temp_photos[i], temp_bounds[i]));
            }
        };

        FBrowser.init=true;
    }
    return new FBrowser(arguments[0],arguments[1]);
};


var FGS = {
    createYearBrowserMap : function() {
        var m = FBrowser.create();
        m.getZoomAsync(function(z) {
            if(z > MAX_ZOOM) {
                m.setZoom(MAX_ZOOM);
            } else if(z < MIN_ZOOM) {
                m.setZoom(MIN_ZOOM);
            } else {
                m.updateview(null, null, z);
            }
        });
    },

    init : function() {
       _IG_Analytics(_uacct, "/mapplet");
       FGS.createYearBrowserMap();
    }
};
FGS.init();
</script>


]]></Content>

</Module>
